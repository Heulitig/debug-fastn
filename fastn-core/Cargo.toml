[package]
name = "fastn-core"
version = "0.1.0"
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true

[features]
default = ["auth"]
# fastn comes with some feature to integrate with fastn controller. fastn controller is a
# separate software, optional. fastn controller is responsible for creating a new fastn
# package, and deploying it on some server, backing content up and so on. fastn has to
# speak with fastn controller, when fastn is managed by fastn controller. Enabling the
# "controller" feature enables that communication.
controller = ["remote"]

# fastn runs in local mode (to be used on your local laptop, or single use server), and in
# remote mode (to be used as a shared server for your entire team). The default is
# local mode.
#
# In local mode the editor acts like a local file editor, any changes done directly
# update the file. In remote mode, only sync can be called, and no direct edits are
# allowed. In future we will also have workspace mode, in which in remote a workspace
# is created for every user, and local edits in the workspace is allowed.
remote = []

auth = ["github-auth"]
github-auth = ["dep:oauth2"]

[dependencies]
actix-web.workspace = true
antidote.workspace = true
argon2.workspace = true
async-lock.workspace = true
async-recursion.workspace = true
camino.workspace = true
chrono.workspace = true
clap.workspace = true
colored.workspace = true
deadpool-postgres.workspace = true
diesel-async.workspace = true
diesel.workspace = true
diesel_migrations.workspace = true
diffy.workspace = true
dirs.workspace = true
edit.workspace = true
env_logger.workspace = true
fastn-js.workspace = true
fastn-observer.workspace = true
fastn-package.workspace = true
fluent.workspace = true
ftd.workspace = true
futures-core.workspace = true
futures-util.workspace = true
futures.workspace = true
hyper.workspace = true
ignore.workspace = true
indoc.workspace = true
intl-memoizer.workspace = true
itertools.workspace = true
lettre.workspace = true
magic-crypt.workspace = true
mime_guess.workspace = true
native-tls.workspace = true
notify.workspace = true
oauth2 = { workspace = true, optional = true }
once_cell.workspace = true
postgres-native-tls.workspace = true
postgres-types.workspace = true
rand.workspace = true
realm-lang.workspace = true
regex.workspace = true
reqwest.workspace = true
rusqlite.workspace = true
serde.workspace = true
serde_json.workspace = true
sha2.workspace = true
slug.workspace = true
thiserror.workspace = true
tokio-postgres.workspace = true
tokio.workspace = true
tracing-subscriber.workspace = true
tracing.workspace = true
url.workspace = true
uuid.workspace = true
zip.workspace = true

[dev-dependencies]
fbt-lib.workspace = true
indoc.workspace = true
pretty_assertions.workspace = true
rusty-hook.workspace = true
